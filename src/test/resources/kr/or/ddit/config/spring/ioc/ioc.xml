<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 스프링 컨테이너에게 건네줄 객체 생성 설명서  -->
	
	<!-- 
		bean : 스프링 컨테이너에서 관리될 스프링 빈 선언
			. id - 스프링 컨테이너 안에서 관리될 스프링 빈의 이름, 다른 스프링 빈과 이름이 중복되면 안된다.
				name 속성을 사용해도 무방하나 관리차원에서 id or name 한쪽만 사용할 것을 추천
				설정 시에만 사용 스프링 빈의 경우는 별도로 이름을 작성하지 않는 경우도 있음	
			
			. class - 해당 스프링빈을 만들 class
			
			
		property : class의 필드(속성) ==> 스프링 컨테이너가 해당 필드의 setter 메소드를 이용하여 스프링 빈을 주입
			
	 -->
 
	<!-- 1. boardDao 라는 이름으로 BoardDao 클래스를 이용하여 스프링 빈 생성
		 2. boardService 라는 이름으로 BoardService 클래스를 이용하여 스프링 빈 생성
		 	boardService의 boardDao 속성으로 1번에 생성한 스프링 빈을 setter 메소드를 통해 주입
		 	
		 	 DL(Dependency Lookup) : 의존대상(사용할 객체)을 검색(lookup)을 통해 반환받는 방식
			 DI(Dependency Injection) : 의존대상(사용할 객체)을 주입을 통해 받는 형식
		 	
		 	 -->
	
	<!-- Dao 불러옴 -->
	<bean id="boardRepository" class="kr.or.ddit.board.repository.BoardRepository"/>

		
	<!-- service 객체를 dao에 연결해줌 DI방식1 (setter이용) -->
	<bean id="boardService" class="kr.or.ddit.board.service.BoardService">
		<!-- boardService가 의존하는 boardDao 스프링빈을 setter 메소드를 통해 주입(Dependency Injection) -->
		<property name="boardRepository" ref="boardRepository"/>	
	</bean>	 	
	 
	<!-- service 객체를 dao에 연결해줌 DI방식2 (생성자 이용) 생성자를 이용할때는 name속성을 추가 안해줘도 됨 -->
	<bean id="boardServiceC" class="kr.or.ddit.board.service.BoardService">
		<constructor-arg name="boardRepository" ref="boardRepository"/>
	</bean>
	


	
	<!-- 		Member		 -->	
	
	<!-- Dao 불러옴 -->
	<bean id="memberDao" class="kr.or.ddit.member.dao.MemberDao"/>

		
	<!-- service 객체를 dao에 연결해줌 DI방식1 (setter이용) -->
	<bean id="memberService" class="kr.or.ddit.member.service.MemberService">
		<property name="memberDao" ref="memberDao"/>	
	</bean>	 
	
	
	
	<!-- 		Category		 -->
	<!-- Dao 불러옴 -->
	<bean id="ctgrDao" class="kr.or.ddit.category.dao.CtgrDao"/>

		
	<!-- service 객체를 dao에 연결해줌 DI방식1 (setter이용) -->
	<bean id="ctgrService" class="kr.or.ddit.category.service.CtgrService">
		<property name="ctgrDao" ref="ctgrDao"/>	
	</bean>	 
	
	
	
	
	
	
	
	


	<!-- person 스프링빈 등록 
		age : 30
		boardRepository : boardDao 스프링 빈 
		
		value : 고정된 상수 값
		ref : 다른 스프링 빈을 참조
		-->
		
	<bean id="person" class="kr.or.ddit.person.model.Person">
		<property name="age" value="30"/>
		<property name="boardRepository" ref="boardRepository"/>
		<property name="birthdate" value="2020-11-03"/>
		
	</bean>	
	
	
	
	
	<!-- customEditorConfigurer 우리가 만든 CustomDateRegister 를 등록하여
		 Date형으로 형 변환시 스프링 프레임워쿠가 형변환히 사용할 수 있도록 설정한다. 
		 [빈 등록할때 패키지 위치 (class) 쓸때 사용할 클래스 이름을 치면 자동완성이 된다.]-->
	<!-- 	
	<bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="propertyEditorRegistrars">
			<list>
				<bean class="kr.or.ddit.config.type.CustomDateRegister"/>
			</list>
		</property>
	</bean> 
	-->
	
	<!-- conversion service (날짜형식으로 변환 String -> Date 타입으로 변환)-->
	<!-- 
	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="kr.or.ddit.config.type.DateStringConverter"/>
			</set>
		</property>	
	</bean>
	 -->
	
	
	
	<!-- 위아래 방식을 동시에 같이 사용할 수 없다 -->
	
	
	
	<!-- formatting conversion service -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	</bean>
	
	
	
	
</beans>
